// This Source Code Form is subject to the terms of the Mozilla Public
// License, v. 2.0. If a copy of the MPL was not distributed with this
// file, You can obtain one at http://mozilla.org/MPL/2.0/.

// Code generated by "cstruct -pkg gpt -struct Header -input header.h -endianness LittleEndian"; DO NOT EDIT.

package gpt

import "encoding/binary"

var _ = binary.LittleEndian

// Header is a byte slice representing the header.h C header.
type Header []byte

// Get_signature returns "EFI PART".
func (s Header) Get_signature() uint64 {
	return binary.LittleEndian.Uint64(s[0:8])
}

// Get_revision returns revision.
func (s Header) Get_revision() uint32 {
	return binary.LittleEndian.Uint32(s[8:12])
}

// Get_header_size returns usually 92 bytes.
func (s Header) Get_header_size() uint32 {
	return binary.LittleEndian.Uint32(s[12:16])
}

// Get_header_crc32 returns header_crc32.
func (s Header) Get_header_crc32() uint32 {
	return binary.LittleEndian.Uint32(s[16:20])
}

// Get_reserved1 returns reserved1.
func (s Header) Get_reserved1() uint32 {
	return binary.LittleEndian.Uint32(s[20:24])
}

// Get_my_lba returns location of this header copy.
func (s Header) Get_my_lba() uint64 {
	return binary.LittleEndian.Uint64(s[24:32])
}

// Get_alternate_lba returns location of the other header copy.
func (s Header) Get_alternate_lba() uint64 {
	return binary.LittleEndian.Uint64(s[32:40])
}

// Get_first_usable_lba returns first usable LBA for partitions.
func (s Header) Get_first_usable_lba() uint64 {
	return binary.LittleEndian.Uint64(s[40:48])
}

// Get_last_usable_lba returns last usable LBA for partitions.
func (s Header) Get_last_usable_lba() uint64 {
	return binary.LittleEndian.Uint64(s[48:56])
}

// Get_disk_guid returns disk UUID.
func (s Header) Get_disk_guid() []byte {
	return s[56:72]
}

// Get_partition_entries_lba returns always 2 in primary header copy.
func (s Header) Get_partition_entries_lba() uint64 {
	return binary.LittleEndian.Uint64(s[72:80])
}

// Get_num_partition_entries returns num_partition_entries.
func (s Header) Get_num_partition_entries() uint32 {
	return binary.LittleEndian.Uint32(s[80:84])
}

// Get_sizeof_partition_entry returns sizeof_partition_entry.
func (s Header) Get_sizeof_partition_entry() uint32 {
	return binary.LittleEndian.Uint32(s[84:88])
}

// Get_partition_entry_array_crc32 returns partition_entry_array_crc32.
func (s Header) Get_partition_entry_array_crc32() uint32 {
	return binary.LittleEndian.Uint32(s[88:92])
}

// HEADER_SIZE is the size of the Header struct.
const HEADER_SIZE = 92
